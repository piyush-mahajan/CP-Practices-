Name:Piyush Mahajan

import sys
from collections import defaultdict
from copy import copy
import string

ALPHABET = string.ascii_lowercase

def load_num():
    return int(sys.stdin.readline().rstrip())


def valid_sub(enc, word, subs):
    """Check if the a substituion dict is valid to convert
    from enc to word."""
    if len(enc) != len(word):
        return False

    for e, w in zip(enc, word):
        if subs[e] and subs[e]!=w: 
            return False

    return True


def create_sub(enc, word, subs):
    """Create a new substitucion dict where the missing substitutions
    to got from enc to word are added"""
    new_subs = copy(subs)

    for e, w in zip(enc, word):
        if new_subs[e] == w:
            continue

        if new_subs[e] is not None:
            raise ValueError

        # No two letters can be reblaced by same letter
        if w in new_subs.values():
            raise ValueError
        new_subs[e] = w
    
    return new_subs


def decrypt(enc, words, subs=None):
    """Recursive solution using backtracking"""
    if subs is None:
        subs = {c: None for c in ALPHABET}

    for word in words[len(enc[0])]:
        # Check word  is valid with current substitutions
        if not valid_sub(enc[0], word, subs):
            continue

        # Create new substitution dict for the word
        try:
            new_subs = create_sub(enc[0], word, subs)
        except ValueError:
            continue
 
        # This is the end of the search
        if len(enc) == 1:
            return [word]
        
        # More words in the list .. keep searching
        dec = decrypt(enc[1:], words, new_subs)
        if dec is not None:
            return [word]+dec
        
    return None




if __name__ == '__main__':
    nwords = load_num()
    
    words = defaultdict(list)
    for _ in range(nwords):
        word = sys.stdin.readline().rstrip().lower()
        words[len(word)].append(word)

    for enc in sys.stdin:
        enc = enc.split()
        if len(enc) == 0:
            break

        dec = decrypt(enc, words)
        if dec:
            print(' '.join(dec))
        else:        
            print(' '.join("*"*len(w) for w in enc))

Input:
29
baseball
football
basketball
tennis
ball
is
a
sport
which
uses
not
one
two
player
players
too
i
like
also
these
are
sports
soccer
no
chess
btw
by
the
way
lrsglrww as r sexvh
dffbqtoo sk t kjfcb bff
knnwqndd hg j gmnbw wnn
u wuqe bdaebdww
c pu iuo hcsw owiict
xhwkw fiw kldixk xwzzak yddxmfjj mfkqwxmfjj mfkwmfjj
micvc tbc vwfbmv mff mchhev pffmdtoo dtvacmdtoo dtvcdtoo jicvv
mysrs bus rehumr mhh msggar ohhmjbxx jbrksmjbxx jbrsjbxx rkaagq
miana pfa ndcfmn mcc mallbn sccmqpjj qpnoamqpjj qpnaqpjj nceeaf
a ybhd baic hdttcu oks
w rvez vwum ezkkmg dj psm trj
b fkry kbew ryggwa qu liw tfurbvw

Output:
baseball is a sport
football is a sport too
******** ** * ***** ***
i like baseball
* ** *** **** ******
these are sports tennis football basketball baseball
these are sports too tennis football basketball baseball chess
***** *** ****** *** ****** ******** ********** ******** ******
these are sports too tennis football basketball baseball soccer
i also like soccer btw
i also like soccer by the way
* **** **** ****** ** *** *******
